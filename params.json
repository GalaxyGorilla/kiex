{"name":"Kiex","tagline":"Elixir version manager and builder","body":"Kiex allows you to easily build and switch between different Elixir versions.\r\n\r\nIt supports setting the default (global) Elixir version as well as per shell/project versions.\r\n\r\nEverything is self-contained under ~/.kiex.\r\n\r\nUsage is based *lightly* on [RVM](http://rvm.io), [kerl](https://github.com/spawngrid/kerl), and [rbenv](https://github.com/sstephenson/rbenv).  \r\n\r\n### Install\r\n\r\nPrereqs: bash\r\n\r\nRun the following to get up and running:\r\n\r\n```\r\ncurl -qs https://raw.github.com/taylor/kiex/master/install | bash -s\r\n```\r\n\r\nwhich will install in $HOME/.kiex.\r\n\r\n\r\n### Usage\r\n\r\nList installed versions\r\n * ``` kiex list ```\r\n\r\nList known releases\r\n * ``` kiex list known ```  (or ``` kiex list releases ```)\r\n\r\nInstall a known release\r\n * ``` kiex install 0.11.2 ```\r\n\r\nUse specific elixir version\r\n * ``` kiex use 0.11.2 ``` -- Sets the elixir version for current shell.\r\n\r\nUse sub-shell with specific elixir version\r\n * ``` kiex shell 0.11.2 ``` -- Starts sub-shell with given elixir version.  Exiting shell goes to default.\r\n\r\nSet default elixir version\r\n * ``` kiex default 0.11.2 ```\r\n\r\nUninstall kiex and elixirs\r\n * ``` kiex implode ``` -- This removes all versions of elixir installed by kiex as well as all kiex components\r\n\r\nUpgrade kiex\r\n * ``` kiex selfupdate ``` -- pull down latest updates for kiex\r\n    - Can also re-curl\r\n\r\n<script type=\"text/javascript\" src=\"https://asciinema.org/a/7523.js\" id=\"asciicast-7523\" async></script>\r\n\r\n### Design philosophy\r\n\r\n * KISS\r\n * Sane defaults\r\n * Self-contained\r\n * Single-purpose\r\n\r\n\r\n#### Comparison Q&A\r\n\r\nHow is it like exenv (rbenv)?\r\n * Super light and simple\r\n * Focus on installing & managing one piece of software: Elixir\r\n\r\nHow is it not like exenv?\r\n * Does not use shims\r\n * Includes elixir build component\r\n\r\nHow is it like Kerl?\r\n * Minimal command set\r\n * Retrieves, builds, installs and manages different releases\r\n\r\nHow is it not like Kerl?\r\n * Not as flexible on install path\r\n * Dynamically get's release list instead of caching\r\n * Build and install actions are not separated\r\n\r\nHow is it like RVM?\r\n * Sane defaults\r\n * Uses Unix PATH to manage binary to use\r\n\r\nHow is it not like RVM? \r\n * No function over-loading\r\n * Does not manage/install extra software and prereqs\r\n\r\n\r\n### Platforms/Shells tested\r\n\r\nOperating Systems:\r\n * Arch\r\n * CentOS\r\n * Debian\r\n * FreeBSD\r\n * OS X/Darwin\r\n * Ubuntu\r\n\r\nShells:\r\n * bash\r\n * csh\r\n * tcsh\r\n * zsh\r\n\r\nErlang installs:\r\n * erlang-solutions\r\n * erlang.org\r\n * kerl\r\n * Debian apt, FreeBSD pkg, OS X brew\r\n\r\n\r\n### Alternatives and References\r\n\r\nAlternatives:\r\n * [exenv](https://github.com/mururu/exenv) + [elixir-build](https://github.com/mururu/elixir-build)\r\n * [edwb](https://github.com/clutchanalytics/edwb)\r\n\r\nRelated tools:\r\n * [kerl](https://github.com/spawngrid/kerl) - Easy building and installing of Erlang/OTP instances\r\n * [kex](https://github.com/d0rc/kex) - Build any tagged release of Erlang/OTP or Elixir from git\r\n * [heroku-buildpack-elixir](https://github.com/goshakkk/heroku-buildpack-elixir) - Elixir buildpack for Heroku\r\n   - [heroku-buildpack-erlang](https://github.com/archaelus/heroku-buildpack-erlang) - Erlang/OTP buildpack for Heroku\r\n * [erln8](https://github.com/metadave/erln8) - Erlang/OTP version manager (builds from git source)\r\n * [robisonsantos/evm](https://github.com/robisonsantos/evm) - Erlang Version Manager (from erlang.org tarballs)\r\n\r\n\r\n### Limitations\r\n\r\n * Does not build erlang\r\n * Does not build Dynamo or any other elixir app\r\n * Same build directory used for every build (saving space vs keeping build env around)\r\n * No uninstall option for installed elixir versions\r\n * No per-directory/project config file.\r\n   - You can hack it in by adding kiex use <version> to .rvmrc or friends ;P\r\n\r\n### TODO\r\n\r\n * Maybe print source line with use command\r\n * Add active command (or similar) to show current elixir\r\n   - Already in list command - this would be the single version\r\n   - Maybe show source line?\r\n * Add sourceline or similar command to show source line to use?\r\n * Add uninstall option for installed elixirs\r\n * Maybe add dynamo install and setup for MIX_PATH\r\n   - how to tie to elixir used? gemset like?\r\n   - use dynamo tags?\r\n * Look at elixir-build for ideas, collaboration\r\n \r\n### License\r\n\r\nSee [LICENSE file](LICENSE)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}